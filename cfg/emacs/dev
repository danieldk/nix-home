;; -*- mode: emacs-lisp; -*-

(use-package company
  :diminish company-mode
  :init (company-mode))

(use-package flycheck
  :init (global-flycheck-mode)
  :diminish flycheck-mode)

(use-package rust-mode
  :mode "\\.rs\\'"
  :config
  (setq rust-format-on-save t))

(use-package racer
  :after rust-mode
  :diminish racer-mode
  :config
  (add-hook 'rust-mode-hook #'racer-mode)
  (add-hook 'racer-mode-hook #'eldoc-mode)
  (add-hook 'racer-mode-hook #'company-mode)
  (define-key rust-mode-map (kbd "TAB") #'company-indent-or-complete-common)
  (setq company-tooltip-align-annotations t))

(use-package flycheck-rust
  :after rust-mode
  :config
  (add-hook 'flycheck-mode-hook #'flycheck-rust-setup))

(use-package cargo
  :config
  (my-local-leader-def
   :states 'normal
   :keymaps 'rust-mode-map
   "c." 'cargo-process-repeat
   "cC" 'cargo-process-clean
   "cX" 'cargo-process-run-example
   "cc" 'cargo-process-build
   "cd" 'cargo-process-doc
   "ce" 'cargo-process-bench
   "cf" 'cargo-process-current-test
   "cf" 'cargo-process-fmt
   "ci" 'cargo-process-init
   "cn" 'cargo-process-new
   "co" 'cargo-process-current-file-tests
   "cs" 'cargo-process-search
   "cu" 'cargo-process-update
   "cx" 'cargo-process-run
   "t"  'cargo-process-test))

(use-package nix
  :demand
  :config
  (use-package nix-mode)
  ;(use-package nix-company)
  (use-package nix-prettify-mode
    :config
    (nix-prettify-global-mode))
  :bind (:map nix-mode-map ([tab] . nix-indent-line))
  :mode ("\\.nix\\'" . nix-mode))

(use-package nix-drv-mode
  :ensure nix-mode
  :mode "\\.drv\\'")
(use-package nix-shell
  :ensure nix-mode
  :commands (nix-shell-unpack nix-shell-configure nix-shell-build))
(use-package nix-repl
  :ensure nix-mode
  :commands (nix-repl))
;(use-package nix-update)

(use-package tex-site
  :load-path "pkg/auctex"
  ;:mode ("\\.tex\\'" . TeX-latex-mode)
  :commands latex-mode
  :config
  (use-package preview)
  ;(use-package ivy-bibtex
  ;  :load-path "pkg/helm-bibtex")
  (setq TeX-parse-self t
	TeX-auto-save t
	reftex-plug-into-AUCTeX t))

(use-package latex
  :config
  (add-hook 'LaTeX-mode-hook 'reftex-mode)
  (my-local-leader-def
    :states 'normal
    :keymaps 'LaTeX-mode-map
    "\\" '(TeX-insert-macro :which-key "insert macro")
    "-"  '(TeX-recenter-output-buffer :which-key "recenter output buffer")
    "%"  '(TeX-comment-or-uncomment-paragraph :which-key "(un)comment paragraph")
    ";"  '(TeX-comment-or-uncomment-region :which-key "(un)comment region")
    "a"  '(TeX-command-run-all :which-key "run all")
    "cc"  `(reftex-citation :which-key "cite")
    "e"  '(LaTeX-environment :which-key "insert environment")
    "m"  '(TeX-insert-macro :which-key "insert macro")
    "p"  '(preview-buffer :which-key "preview")
    "rl" '(reftex-label :which "add label")
    "rr" '(reftex-reference :which "refer label")
    "v"  '(TeX-view :which-key "view")))

(use-package cython-mode)

(use-package go-mode)
