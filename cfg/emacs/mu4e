;; -*- mode: emacs-lisp; -*-

(use-package mu4e
  :config
  (my-leader-def
    :keymaps 'normal
    "am" 'mu4e)

  (my-local-leader-def
    :keymaps 'normal
    :states '(mu4e-headers-mode-map mu4e-view-mode-map)
    "mr" '(mu4e-headers-toggle-include-related :which-key "related")
    "t" '(mu4e-headers-toggle-threading :which-key "threading"))

  (setq mu4e-drafts-folder "/Drafts"
	mu4e-trash-folder  "/Trash"
	mu4e-sent-folder   "/Sent Items"
	mu4e-sent-messages-behavior 'delete
	mu4e-refile-folder "/Archive"

	mu4e-get-mail-command "mbsync -a"
	mu4e-change-filenames-when-moving t
	mu4e-context-policy 'pick-first
	mu4e-view-show-addresses t
	mu4e-html2text-command "textutil -stdin -format html -convert txt -stdout"
	mu4e-contexts `( ,(make-mu4e-context
			   :name "Home"
			   :enter-func (lambda () (mu4e-message "Entering Home context"))
			   :leave-func (lambda () (mu4e-message "Leaving Home context"))
			   ;; we match based on the contact-fields of the message
			   :match-func (lambda (msg)
					 (when msg
					   (mu4e-message-contact-field-matches msg
									       :to "me@danieldk.eu")))
			   :vars '( ( user-mail-address      . "me@danieldk.eu"  )
				    ( user-full-name         . "Daniël de Kok" )
				    ( mu4e-compose-signature . nil)))
			 ,(make-mu4e-context
			   :name "Work"
			   :enter-func (lambda () (mu4e-message "Switch to the Work context"))
			   :match-func (lambda (msg)
					 (when msg
					   (mu4e-message-contact-field-matches msg
									       :to "daniel.de-kok@uni-tuebingen.de")))
			   :vars '( ( user-mail-address       . "daniel.de-kok@uni-tuebingen.de" )
				    ( user-full-name          . "Daniël de Kok" )
				    ( mu4e-compose-signature  . nil))))
	
	mu4e-bookmarks `( ,(make-mu4e-bookmark
			    :name  "Unread messages"
			    :query "flag:unread AND NOT flag:trashed"
			    :key ?u)
			  ,(make-mu4e-bookmark
			    :name "Today's messages"
			    :query "date:today..now"
			    :key ?t)
			  ,(make-mu4e-bookmark
			    :name "Last 7 days"
			    :query "date:7d..now"
			    :key ?w)
			  ,(make-mu4e-bookmark
			    :name "Messages with images"
			    :query "mime:image/*"
			    :key ?p)
			  ,(make-mu4e-bookmark
			    :name "SFB833"
			    :query "from:sfb*"
			    :key ?s))))

(use-package evil-mu4e
  :after mu4e)

(mu4e)
